name: Release
on:
  push:
    branches:
      - main
      - dev

permissions:
  contents: write # to be able to publish a GitHub release
  issues: write # to be able to comment on released issues
  pull-requests: write # to be able to comment on released pull requests

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6
        with:
          node-version: "lts/*"
      - name: Install dependencies
        run: npm clean-install
      - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
        run: npm audit signatures
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.SEMANTIC_RELEASE }}
        run: npx semantic-release
      - name: Create PR to update dev branch
        if: github.ref == 'refs/heads/main'
        run: |
          gh pr create --base dev --head main --title "Auto-Update dev branch after Release" --fill || echo "PR already exists! Trying merge..."
          sleep 5
          gh pr merge main --merge
        env:
          GH_TOKEN: ${{ secrets.SEMANTIC_RELEASE }}
      - name: Create PR to create upcoming release
        if: github.ref == 'refs/heads/dev'
        run: |
          gh pr create --base main --head dev --title "Upcoming Release" --fill || echo "PR already exists! Skipping..."
        env:
          GH_TOKEN: ${{ secrets.SEMANTIC_RELEASE }}
